using System.Collections.Generic;
using System.Text;

namespace FomodInstaller.Util.Antlr
{
	/// <summary>
	/// This tracks errors generated by the DPL parser and lexer.
	/// </summary>
	public class ErrorTracker
	{
		private List<LanguageError> m_lstLexerErrors = new List<LanguageError>();
		private List<LanguageError> m_lstParserErrors = new List<LanguageError>();

		#region Properties

		/// <summary>
		/// Gets whether or not the tracker contains any errors.
		/// </summary>
		/// <value>Whether or not the tracker contains any errors.</value>
		public bool HasErrors
		{
			get
			{
				return (LexerErrors.Count + ParserErrors.Count) > 0;
			}
		}

		/// <summary>
		/// Gets the errors generated by the lexer.
		/// </summary>
		/// <value>The errors generated by the lexer.</value>
		public List<LanguageError> LexerErrors
		{
			get
			{
				return m_lstLexerErrors;
			}
		}

		/// <summary>
		/// Gets the errors generated by the lexer.
		/// </summary>
		/// <value>The errors generated by the lexer.</value>
		public List<LanguageError> ParserErrors
		{
			get
			{
				return m_lstParserErrors;
			}
		}

		#endregion

		/// <summary>
		/// Generates a string representation of the class.
		/// </summary>
		/// <remarks>
		/// This returns an error message summarizing the tracker's errors.
		/// </remarks>
		/// <returns>A string representation of the class.</returns>
		public override string ToString()
		{
			StringBuilder stbErrors = new StringBuilder();
			if (LexerErrors.Count > 0)
			{
				stbErrors.AppendLine("Lexer Errors:");
				foreach (LanguageError lerError in LexerErrors)
					stbErrors.Append("\t").AppendLine(lerError.ToString());
				if (ParserErrors.Count > 0)
					stbErrors.AppendLine();
			}
			if (ParserErrors.Count > 0)
			{
				stbErrors.AppendLine("Parser Errors:");
				foreach (LanguageError lerError in ParserErrors)
					stbErrors.Append("\t").AppendLine(lerError.ToString());
			}
			return stbErrors.ToString();
		}

		/// <summary>
		/// Generates an HTML representation of the class.
		/// </summary>
		/// <remarks>
		/// This returns an error message summarizing the tracker's errors.
		/// </remarks>
		/// <returns>An HTML representation of the class.</returns>
		public string ToHtml()
		{
			StringBuilder stbErrors = new StringBuilder();
			if (LexerErrors.Count > 0)
			{
				stbErrors.AppendLine("<b>Lexer Errors:</b><ul>");
				foreach (LanguageError lerError in LexerErrors)
					stbErrors.Append("<li>").Append(lerError.ToString()).AppendLine("</li>");
				stbErrors.AppendLine("</ul>");
			}
			if (ParserErrors.Count > 0)
			{
				stbErrors.AppendLine("<b>Parser Errors:</b><ul>");
				foreach (LanguageError lerError in ParserErrors)
					stbErrors.Append("<li>").Append(lerError.ToString()).AppendLine("</li>");
				stbErrors.AppendLine("</ul>");
			}
			return stbErrors.ToString();
		}
	}
}
